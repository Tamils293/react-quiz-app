{"version":3,"sources":["QuizData.js","Components/Quiz.js","Components/Header.js","index.js"],"names":["QuizData","Quiz","props","loadQuiz","currentIndex","state","setState","question","options","answer","nextQuestionHander","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","Math","floor","seconds","clearInterval","time","alert","this","prevProps","prevState","style","margin","map","item","index","className","height","padding","textAlign","option","onClick","id","backgroundColor","Component","Header","fontFamily","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0e99d086.chunk.js","sourcesContent":["export const QuizData = [  \r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"What does HTML stand for?\",\r\n       \"options\":[  \r\n          \"Home Tool Markup Language\",\r\n          \"Hyper Text Markup Language\",\r\n          \"Hyperlinks and Text Markup Language\",\r\n       \r\n       ],\r\n       \"answer\":\"Hyper Text Markup Language\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"Who is making the Web standards?\",\r\n       \"options\":[  \r\n          \"Google\",\r\n          \"Microsoft\",\r\n          \"Mozilla\",\r\n          \"The World Wide Web Consortium\"\r\n       ],\r\n       \"answer\":\"The World Wide Web Consortium\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"Choose the correct HTML element for the largest heading:\",\r\n       \"options\":[  \r\n          \"<h6>\",\r\n          \"<heading>\",\r\n          \"<h1>\",\r\n          \"<head>\"\r\n       ],\r\n       \"answer\":\"<h1>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"What is the correct HTML element for inserting a line break?\",\r\n       \"options\":[  \r\n          \"<br>\",\r\n          \"<lb>\",\r\n          \"<break>\"\r\n       ],\r\n       \"answer\":\"<br>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"What is the correct HTML for adding a background color?\",\r\n       \"options\":[  \r\n          \"<body bg='yellow'>\",\r\n          \"<body style='background-color:yellow;'>\",\r\n          \"<background>yellow</background>\"\r\n       ],\r\n       \"answer\":\"<body style='background-color:yellow;'>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"Choose the correct HTML element to define important text\",\r\n       \"options\":[  \r\n          \"<i>\",\r\n          \"<strong>\",\r\n          \"<b>\",\r\n          \"<important>\"\r\n       ],\r\n       \"answer\":\"<b>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"Choose the correct HTML element to define emphasized text\",\r\n       \"options\":[  \r\n          \"<i>\",\r\n          \"<italic>\",\r\n          \"<em>\"\r\n       ],\r\n       \"answer\":\"<i>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"What is the correct HTML for creating a hyperlink?\",\r\n       \"options\":[  \r\n          \"<a href='http://www.w3schools.com'>W3Schools</a>\",\r\n          \"<a>http://www.w3schools.com</a>\",\r\n          \"<a url='http://www.w3schools.com'>W3Schools.com</a>\",\r\n          \"<a name='http://www.w3schools.com'>W3Schools.com</a>\"\r\n       ],\r\n       \"answer\":\"<a href='http://www.w3schools.com'>W3Schools</a>\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"Which character is used to indicate an end tag?\",\r\n       \"options\":[  \r\n          \"<\",\r\n          \"*\",\r\n          \"^\",\r\n          \"/\"\r\n       ],\r\n       \"answer\":\"/\"\r\n    },\r\n    {  \r\n        \"id\" : 0,\r\n       \"question\":\"How can you open a link in a new tab/browser window?\",\r\n       \"options\":[  \r\n          \"<a href='url' target='_blank'>\",\r\n          \"<a href='url' target='new'>\",\r\n          \"<a href='url' new>\"\r\n       ],\r\n       \"answer\":\"<a href='url' target='_blank'>\"\r\n    }\r\n    \r\n ]","import React, { Component } from 'react'\r\nimport {QuizData} from '../QuizData';\r\n//import {Pie} from \"react-chartjs-2\"\r\n// import \"./styles.css\"\r\n\r\nexport class Quiz extends Component {\r\n   \r\n   constructor(props) {\r\n       super(props)\r\n   \r\n       this.state = {\r\n            userAnswer: null ,\r\n            currentIndex: 0,\r\n            options: [] ,\r\n            quizEnd: false,\r\n            score : 0,\r\n            disabled : true,\r\n            time:{}\r\n       };\r\n       this.interval= null\r\n   }\r\n   \r\n   loadQuiz=() => {\r\n       const{currentIndex} = this.state;\r\n       this.setState(()=> {\r\n           return{\r\n               question: QuizData[currentIndex].question,\r\n               options: QuizData[currentIndex].options,\r\n               answer: QuizData[currentIndex].answer\r\n           }\r\n       })\r\n   }\r\n   \r\n\r\n   nextQuestionHander = () => {\r\n    const {userAnswer, answer, score} = this.state\r\n   \r\n    \r\n    if(userAnswer === answer){\r\n        this.setState({\r\n            score: score + 1\r\n        })\r\n    }\r\n\r\n    this.setState({\r\n        currentIndex: this.state.currentIndex + 1,\r\n        userAnswer: null\r\n    })\r\n}\r\n   \r\n   componentDidMount () {\r\n       this.loadQuiz();\r\n       this.startTimer() ;\r\n   }\r\n  \r\n   checkAnswer = answer => {\r\n    this.setState({\r\n        userAnswer: answer,\r\n        disabled: false\r\n    })\r\n}\r\n\r\nfinishHandler =() => {\r\n    if(this.state.currentIndex === QuizData.length -1){\r\n        this.setState({\r\n            quizEnd:true\r\n        })\r\n    }\r\n}\r\n \r\n   componentDidUpdate(prevProps, prevState) {\r\n       const{currentIndex} =this.state;\r\n       if(this.state.currentIndex !== prevState.currentIndex){\r\n        this.setState(()=> {\r\n            return{\r\n                question: QuizData[currentIndex].question,\r\n                options: QuizData[currentIndex].options,\r\n                answer: QuizData[currentIndex].answer\r\n            }\r\n        });\r\n       }\r\n   }\r\n   \r\n startTimer=() => {\r\n     const countDownTime = Date.now() + 300000 ;\r\n     this.interval =setInterval(()=> {\r\n        const now = new Date()\r\n        const distance = countDownTime- now ;\r\n\r\n        const minutes = Math.floor((distance % (1000*60*60 )) / (1000*60))\r\n        const seconds = Math.floor((distance % (1000*60)) / (1000))\r\n\r\n        if (distance < 0) {\r\n            clearInterval(this.interval);\r\n            this.setState({\r\n                time:{\r\n                    minutes: 0,\r\n                    seconds : 0\r\n                }\r\n            },() => {\r\n                alert(\"Time is up\");\r\n                this.setState({\r\n                    quizEnd:true\r\n                })\r\n                \r\n            });\r\n        } else {\r\n            this.setState({\r\n                time:{\r\n                    minutes,\r\n                    seconds\r\n                }\r\n            })\r\n        }\r\n     },1000);\r\n }\r\n   \r\n    render() {\r\n        const {question,options,currentIndex,userAnswer,quizEnd, time}=this.state\r\n     \r\n                  \r\n       \r\n        if(quizEnd) {\r\n           \r\n            return (\r\n                \r\n                <div  style={{ margin : \"0 10rem\"}}>\r\n                    <h1>Game Over. Final score is {this.state.score} points</h1>\r\n                    <p>The correct Answers for the quiz are</p>\r\n                     \r\n                  \r\n                    <ul>\r\n                        {QuizData.map((item, index) => (\r\n                            <li className='ui floating message options'\r\n                                key={index}>\r\n                                    {item.answer}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div style={{height:\"500px\"}}>\r\n                      \r\n                    {/* <Pie \r\n            data={{\r\n                labels: [\"right\",\"wrong\"],\r\n                datasets:[\r\n                    {\r\n                        label:\"Results\",\r\n                        data: [ 7,3],\r\n                        backgroundColor:[\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                        ]\r\n                    }\r\n                ]\r\n             }\r\n            }\r\n            height={100}\r\n            width={300}\r\n            options={{\r\n                maintainAspectRatio: true,\r\n                animation: false\r\n\r\n            }} /> */}\r\n            </div>\r\n                </div>\r\n            )\r\n        }\r\n        // {\r\n        return (\r\n            <div >\r\n                <div style={{padding:\"10px 10px\"}}>\r\n                <span className=\"qns\">{`Question ${currentIndex + 1} of ${QuizData.length }`}</span>\r\n\r\n                 <span className=\"timer\">⏲️{\" \"}{time.minutes}:{time.seconds}</span>\r\n                 </div>\r\n            <div style={{ textAlign: \"center\",margin:\"0 25%\" }} >\r\n\r\n            \r\n            <h2>{question}</h2>\r\n           \r\n            <div >\r\n            {options.map(option => (  //for each option, new paragraph\r\n                <p key={option.id} \r\n                className={`ui floating message options\r\n                ${userAnswer === option ? \"selected\" : null}\r\n                `}\r\n                onClick= {() => this.checkAnswer(option)}\r\n\r\n                >\r\n                    {option}\r\n                </p>\r\n            ))}\r\n            </div>\r\n            {currentIndex < QuizData.length -1 &&\r\n            <button \r\n            style={{backgroundColor: 'ButtonHighlight' , padding:\"8px 20px\"}}\r\n            className=\"ui inverted button\"\r\n            disabled = {this.state.disabled}\r\n            onClick = {this.nextQuestionHander}\r\n                >Next Question</button>\r\n            }\r\n                {currentIndex === QuizData.length -1 &&\r\n                <button\r\n                style={{backgroundColor: 'hotpink' , padding:\"8px 20px\"}}\r\n                className=\"ui inverted button\"\r\n                disabled = {this.state.disabled}\r\n                onClick = {this.finishHandler}\r\n                > 🎉Finish</button>\r\n                }\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div >\r\n            \r\n            <h3 style={{textAlign:\"justify\" , padding:\"15px\"}}>Quiz Application</h3>\r\n            \r\n            <hr/>\r\n            <div style={{textAlign: \"center\" ,fontFamily:\"system-ui\"}}>\r\n              <h1> HTML Quiz</h1>  \r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Quiz from './Components/Quiz'\r\nimport Header from \"./Components/Header\"\r\n\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n            <Quiz />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App></App>, rootElement) //renders the component(first parameter) as a child of the element(second parameter)"],"sourceRoot":""}